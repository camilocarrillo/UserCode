#include "Riostream.h"
#include <fstream>
#include <iomanip>
#include <vector>
#include <string>
#include "TLegend"

void setHisto(TH1F * residuals, string title,string name,bool barrel){
  residuals->GetXaxis()->SetTitle(name.c_str());
  if(barrel){
    residuals->GetXaxis()->SetLabelSize(0.05);
    residuals->GetXaxis()->SetTitleSize(0.05);
  }else{
    residuals->GetXaxis()->SetLabelSize(0.065);
    residuals->GetXaxis()->SetTitleSize(0.065);
  }
  
  residuals->GetXaxis()->SetRangeUser(-6,6);
  residuals->SetLineWidth(3);
  
  residuals->Fit("gaus","Q" ,"C" ,-3,3);
  float sigma = residuals->GetFunction("gaus")->GetParameter(2);
  stringstream legend;
  TLegend *leg = new TLegend(0.65,0.93,0.89,0.7);
  legend.str("");
  if(sigma<1) legend<<"#sigma="<<setprecision(2)<<sigma<<"cm";
  else        legend<<"#sigma="<<setprecision(3)<<sigma<<"cm";

  residuals->GetFunction("gaus")->SetLineWidth(3);
  leg->AddEntry(residuals->GetFunction("gaus"),legend.str().c_str(),"l");  
  if(barrel)  leg->SetTextSize(0.05);
  else leg->SetTextSize(0.08);
  residuals->Draw();
  leg->Draw("same");
  leg->SetFillColor(0);
}

void gaussianResolutionMuonPaper(){
  gROOT->Reset();
  gStyle->SetOptStat(0);
  gStyle->SetOptFit(0);

  cout<<"getting the file"<<endl;

  TFile * theFile = new TFile("sec9550.root");  
	
  cout<<"getting the histo"<<endl;

  TCanvas * Ca0 = new TCanvas("Ca0","Residuals",1200,800);  Ca0->Divide(3,2);
  
  string name,title;
  name = "residuals RB1in (cm)"; title = "residualRB1in";  TH1F * residuals = (TH1F*) (theFile->Get(title.c_str())); Ca0_1->cd();   setHisto(residuals,title,name,true); 
  name = "residuals RB1out (cm)";title = "residualRB1out"; TH1F * residuals = (TH1F*) (theFile->Get(title.c_str())); Ca0_2->cd(); setHisto(residuals,title,name,true); 
  name = "residuals RB2in (cm)"; title = "residualRB2in";  TH1F * residuals = (TH1F*) (theFile->Get(title.c_str())); Ca0_3->cd();  setHisto(residuals,title,name,true); 
  name = "residuals RB2out (cm)";title = "residualRB2out"; TH1F * residuals = (TH1F*) (theFile->Get(title.c_str())); Ca0_4->cd(); setHisto(residuals,title,name,true); 
  name = "residuals RB3 (cm)";   title = "residualRB3";    TH1F * residuals = (TH1F*) (theFile->Get(title.c_str())); Ca0_5->cd();    setHisto(residuals,title,name,true); 
  name = "residuals RB4 (cm)";   title = "residualRB4";    TH1F * residuals = (TH1F*) (theFile->Get(title.c_str())); Ca0_6->cd();    setHisto(residuals,title,name,true); 
 
  Ca0->SaveAs("resolutionBarrel.png"); 

  TCanvas * Ca1 = new TCanvas("Ca1","Residuals",1200,800);  Ca1->Divide(3,3);
  
  name = "residuals RE(1,2,3)/3/A(cm)";title = "residualStation123Ring3_A"; TH1F * residuals = (TH1F*) (theFile->Get(title.c_str())); Ca1_1->cd(); setHisto(residuals,title,name,false); 
  name = "residuals RE(1,2,3)/3/B(cm)";title = "residualStation123Ring3_B"; TH1F * residuals = (TH1F*) (theFile->Get(title.c_str())); Ca1_2->cd(); setHisto(residuals,title,name,false); 
  name = "residuals RE(1,2,3)/3/C(cm)";title = "residualStation123Ring3_C"; TH1F * residuals = (TH1F*) (theFile->Get(title.c_str())); Ca1_3->cd(); setHisto(residuals,title,name,false); 
  name = "residuals RE(2,3)/2/A(cm)";title = "residualStation23Ring2_A";  TH1F * residuals = (TH1F*) (theFile->Get(title.c_str())); Ca1_4->cd();   setHisto(residuals,title,name,false); 
  name = "residuals RE(2,3)/2/B(cm)";title = "residualStation23Ring2_B";  TH1F * residuals = (TH1F*) (theFile->Get(title.c_str())); Ca1_5->cd();   setHisto(residuals,title,name,false); 
  name = "residuals RE(2,3)/2/C(cm)";title = "residualStation23Ring2_C";  TH1F * residuals = (TH1F*) (theFile->Get(title.c_str())); Ca1_6->cd();   setHisto(residuals,title,name,false); 
  name = "residuals RE1/2/A(cm)";title = "residualStation1Ring2_A";   TH1F * residuals = (TH1F*) (theFile->Get(title.c_str())); Ca1_7->cd();       setHisto(residuals,title,name,false); 
  name = "residuals RE1/2/B(cm)";title = "residualStation1Ring2_B";   TH1F * residuals = (TH1F*) (theFile->Get(title.c_str())); Ca1_8->cd();       setHisto(residuals,title,name,false); 
  name = "residuals RE1/2/C(cm)";title = "residualStation1Ring2_C";   TH1F * residuals = (TH1F*) (theFile->Get(title.c_str())); Ca1_9->cd();       setHisto(residuals,title,name,false); 
  Ca1->SaveAs("resolutionEndCap.png"); 													     

  gROOT->Reset();
  gStyle->SetOptStat(0);
  gStyle->SetOptFit(0);
  
  TCanvas * Ca3 = new TCanvas("Ca3","Central Efficiency",1200,800);  Ca3->Divide(2,1);
    
  Ca3_1->cd();
 
  TH1F * CentralEffBarrel = (TH1F*) (theFile->Get("CentralEffBarrel"));
  CentralEffBarrel->GetXaxis()->SetTitle("Barrel Efficiency %");
  CentralEffBarrel->GetXaxis()->SetLabelSize(0.04);
  CentralEffBarrel->GetXaxis()->SetTitleSize(0.065);
  CentralEffBarrel->SetLineWidth(3);
  TLegend *leg = new TLegend(0.35,0.93,0.59,0.7);
  stringstream legend;
  legend.str("");
  legend<<"Mean "<<setprecision(4)<<CentralEffBarrel->GetMean()<<"%";
  leg->AddEntry(CentralEffBarrel,legend.str().c_str(),"l");  
  leg->SetTextSize(0.05);
  CentralEffBarrel->Draw();
  leg->Draw("same");
  leg->SetFillColor(0);
  
  Ca3_2->cd();

  TH1F * CentralEffEndCap = (TH1F*) (theFile->Get("CentralEffEndCap"));
  CentralEffEndCap->GetXaxis()->SetTitle("EndCap Efficiency %");
  CentralEffEndCap->GetXaxis()->SetLabelSize(0.04);
  CentralEffEndCap->GetXaxis()->SetTitleSize(0.065);
  CentralEffEndCap->SetLineWidth(3);
  TLegend *leg = new TLegend(0.35,0.93,0.59,0.7);
  stringstream legend;
  legend.str("");
  legend<<"Mean "<<setprecision(4)<<CentralEffEndCap->GetMean()<<"%";
  leg->AddEntry(CentralEffEndCap,legend.str().c_str(),"l");  
  leg->SetTextSize(0.05);
  CentralEffEndCap->Draw();
  leg->Draw("same");
  leg->SetFillColor(0);


  //  exit(0);
}
